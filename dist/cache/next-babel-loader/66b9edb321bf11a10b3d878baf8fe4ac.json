{"ast":null,"code":"import \"antd/lib/pagination/style/css\";\nimport _Pagination from \"antd/lib/pagination\";\nimport \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from 'react';\nvar Search = _Input.Search;\nimport { getAllHospitalDetail, getHospitalDetail } from '../request/hospitalCode';\nvar initCurrentPage = 1;\nvar initPageSize = 10;\n\nvar HospitalCode = function HospitalCode(props) {\n  var _useState = useState(props.tableData),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableData = _useState2[0],\n      setTableData = _useState2[1];\n\n  var _useState3 = useState(initCurrentPage),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState(initPageSize),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pageSize = _useState6[0],\n      setPageSize = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      validateInput = _useState8[0],\n      setValidateInput = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showPagination = _useState10[0],\n      setShowPagination = _useState10[1];\n\n  var handleChange = function handleChange(e) {\n    var val = e.target.value;\n\n    if (!val) {\n      setValidateInput(1);\n      return;\n    }\n\n    setValidateInput(0);\n  };\n\n  var handleSearch =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(val) {\n      var dataSource;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (val) {\n                _context.next = 3;\n                break;\n              }\n\n              setValidateInput(1);\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (!(validateInput === 0)) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 6;\n              return getHospitalDetail(val);\n\n            case 6:\n              dataSource = _context.sent;\n\n              if (dataSource.length === 0) {\n                _message.info('未查询到医院信息', 0.8);\n              }\n\n              setPageSize(10); // 默认每一页的数量\n\n              setCurrentPage(1); // 默认当前页\n\n              setShowPagination(false); // 隐藏分页器\n\n              setTableData(dataSource);\n\n            case 12:\n              return _context.abrupt(\"return\");\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSearch(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var columns = [{\n    title: '编码',\n    dataIndex: 'hospitalCode',\n    key: 'code'\n  }, {\n    title: '医院名称',\n    dataIndex: 'hospitalName',\n    key: 'hospitalName',\n    className: 'hospitalNameClass',\n    width: 300\n  }, {\n    title: '所属区县',\n    dataIndex: 'county',\n    key: 'county'\n  }, {\n    title: '医院类别',\n    dataIndex: 'type',\n    key: 'type'\n  }, {\n    title: '医院等级',\n    dataIndex: 'level',\n    key: 'level'\n  }, {\n    title: '医院地址',\n    dataIndex: 'address',\n    key: 'address',\n    className: 'hospitalAddressClass'\n  }];\n\n  var pageChange = function pageChange(currentPage) {\n    setCurrentPage(currentPage);\n    getAllHospitalDetail(currentPage, pageSize).then(function (data) {\n      setTableData(data.data || '');\n    });\n  };\n\n  var onShowSizeChange =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(pageSize) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setPageSize(pageSize);\n              getAllHospitalDetail(currentPage, pageSize).then(function (data) {\n                setTableData(data.data || '');\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onShowSizeChange(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(React.Fragment, null, React.createElement(_JSXStyle, {\n    id: \"3799678537\"\n  }, [\".hospitalNameClass.jsx-3799678537{width:200px;}\", \".hospitalAddressClass.jsx-3799678537{width:320px;}\", \".tabelPagination.jsx-3799678537{margin-top:20px;float:right;}\", \".input.jsx-3799678537{position:relative;width:50%;margin:0px auto 40px;}\", \".input-explain.jsx-3799678537{display:none;font-variant:tabular-nums;font-feature-settings:'tnum';color:#f5222d;box-sizing:border-box;clear:both;min-height:40px;font-size:14px;-webkit-transition:color 0.3s cubic-bezier(0.215,0.61,0.355,1);-webkit-transition:color 0.3s cubic-bezier(0.215,0.61,0.355,1);transition:color 0.3s cubic-bezier(0.215,0.61,0.355,1);position:absolute;}\", \".input-error.jsx-3799678537{display:block;}\", \".hospitalNameClass.jsx-3799678537{width:150px;}\", \".hospitalAddressClass.jsx-3799678537{width:300px;}\"]), React.createElement(\"div\", {\n    className: \"jsx-3799678537\" + \" \" + \"input\"\n  }, React.createElement(Search, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u533B\\u9662\\u540D\\u79F0\",\n    onSearch: handleSearch,\n    allowClear: true,\n    enterButton: true,\n    autoComplete: \"off\",\n    onChange: handleChange,\n    className: validateInput === 0 ? '' : 'has-error'\n  }), React.createElement(\"div\", {\n    className: \"jsx-3799678537\" + \" \" + ('input-explain ' + (validateInput === 1 ? 'input-error' : '') || \"\")\n  }, \"\\u533B\\u9662\\u540D\\u79F0\\u4E0D\\u80FD\\u4E3A\\u7A7A\")), React.createElement(_Table, {\n    bordered: true,\n    size: \"middle\",\n    locale: {\n      emptyText: '暂无医院信息'\n    },\n    columns: columns,\n    pagination: false,\n    dataSource: tableData\n  }), showPagination && React.createElement(\"div\", {\n    className: \"jsx-3799678537\" + \" \" + \"tabelPagination\"\n  }, React.createElement(_Pagination, {\n    showQuickJumper: true,\n    showSizeChanger: true,\n    defaultCurrent: 1,\n    total: props.total,\n    current: currentPage,\n    pageSize: pageSize,\n    onChange: pageChange,\n    onShowSizeChange: onShowSizeChange\n  })));\n};\n\nHospitalCode.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref3) {\n    var err, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            err = _ref3.err;\n\n            if (!err) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw err;\n\n          case 3:\n            _context3.next = 5;\n            return getAllHospitalDetail(initCurrentPage, initPageSize);\n\n          case 5:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", {\n              total: data.total || 0,\n              tableData: data.data || ''\n            });\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default HospitalCode;","map":null,"metadata":{},"sourceType":"module"}